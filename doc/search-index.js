var N = null;var searchIndex = {};
searchIndex["rbot_discord"]={"doc":"discord-db is a Rust Discord BOT.","items":[[3,"Credentials","rbot_discord","Store the credential for the mail account, and discord token.",N,N],[12,"email","","",0,N],[12,"password","","",0,N],[12,"domain","","",0,N],[12,"token","","",0,N],[3,"CREDENTIALS_FILE","","Represent the file that store the credential",N,N],[12,"__private_field","","",1,N],[3,"MAIL_INFO_FILE","","Represent the file for mails config",N,N],[12,"__private_field","","",2,N],[3,"MAIL_LOCK","","Is the last mail text, stored to be use on call back",N,N],[12,"__private_field","","",3,N],[3,"NOTIFY_EVENT_FILE","","",N,N],[12,"__private_field","","",4,N],[5,"main","","We run the core and we loop on a basic cmd.",N,[[]]],[0,"core","","The base of the program containing the abstractions for files and connection to discord.",N,N],[5,"run","rbot_discord::core","Spawn thread to run core functions.",N,[[],["joinhandle"]]],[0,"connection","","Handle the connection with discord and it's events.",N,N],[3,"Handler","rbot_discord::core::connection","Struct that old Traits Implementations to Handle the different events send by discord.",N,N],[3,"Command","","",N,N],[12,"exec","","",5,N],[12,"argument_min","","",5,N],[12,"argument_max","","",5,N],[12,"channel","","",5,N],[12,"usage","","",5,N],[3,"ATTACKED","","",N,N],[12,"__private_field","","",6,N],[3,"TAG_MSG_LIST","","",N,N],[12,"__private_field","","",7,N],[3,"CONTAIN_MSG_LIST","","",N,N],[12,"__private_field","","",8,N],[3,"CONTAIN_REACTION_LIST","","",N,N],[12,"__private_field","","",9,N],[3,"COMMANDS_LIST","","",N,N],[12,"__private_field","","",10,N],[5,"process_command","","",N,[[["vec"],["message"]],["bool"]]],[5,"process_tag_msg","","",N,[[["vec"],["message"]],["bool"]]],[5,"process_contains","","",N,[[["message"]]]],[5,"quit","","",N,[[["vec"]],["string"]]],[5,"split_args","","",N,[[["string"]],["vec",["str"]]]],[5,"bot_connect","","Get the discord token from `CREDENTIALS_FILE` and run the client.",N,[[]]],[7,"CHANNEL_MAIN","","`ChannelId` for main channel",N,N],[7,"CHANNEL_MAILS","","`ChannelId` for mail channel",N,N],[7,"CHANNEL_BOT","","",N,N],[7,"ATTACKED","","",N,N],[7,"TAG_MSG_LIST","","",N,N],[7,"CONTAIN_MSG_LIST","","",N,N],[7,"CONTAIN_REACTION_LIST","","",N,N],[7,"COMMANDS_LIST","","",N,N],[8,"IsEmpty","","",N,N],[10,"is_empty","","",11,[[["self"]],["bool"]]],[0,"files","rbot_discord::core","Abstraction of a file handler, allow you to open a file and give it a structure, to serialize/deserialize from.",N,N],[3,"FileReader","rbot_discord::core::files","",N,N],[12,"file","","",12,N],[12,"stored","","",12,N],[5,"build","","Create a new [`FileReader`] and read/fill with [`read_struct`]",N,[[["string"],["t"]],["filereader"]]],[11,"read","","",12,[[["self"]],["result",["string"]]]],[11,"write_string","","",12,[[["self"],["string"]],["result"]]],[11,"write_stored","","",12,[[["self"]],["result"]]],[11,"read_struct","","Read the file, deserialise it automaticly and store it in the Structure `self.stored`",12,[[["self"]]]],[11,"read_json","","Read the file, deserialise it automaticly and return a `Value`",12,[[["self"]],["result",["value"]]]],[0,"features","rbot_discord","Features for the bot",N,N],[5,"run","rbot_discord::features","Spawn a Thread for [`mail`] and [`monitor`] to run in background",N,[[]]],[0,"mail","","Connect to a mail account, and track incoming mails.",N,N],[3,"Info","rbot_discord::features::mail","Stored info on the session and states of the mails.",N,N],[12,"mail_number","","",13,N],[12,"resolved","","",13,N],[12,"assigned","","",13,N],[12,"unassigned","","",13,N],[5,"parse_rfc","","Parse messages from emails and fill apropriate vars",N,[[["string"],["string"],["string"],["fetch"]]]],[5,"assign","","Assign a user with given the mail number and the user",N,[[["vec"]],["string"]]],[5,"resolve","","Resolve the mail with this given number",N,[[["vec"]],["string"]]],[5,"content","","",N,[[["vec"]],["string"]]],[5,"display_unassigned","","",N,[[["vec"]],["string"]]],[5,"display_assigned","","",N,[[["vec"]],["string"]]],[5,"display_resolved","","",N,[[["vec"]],["string"]]],[5,"check_mail","","Main loop, that connect and retreive the mails.",N,[[]]],[17,"_IMPL_SERIALIZE_FOR_Info","","",N,N],[17,"_IMPL_DESERIALIZE_FOR_Info","","",N,N],[11,"display_assigned","","",13,[[["self"],["string"]],["string"]]],[11,"display_resolved","","",13,[[["self"],["string"]],["string"]]],[11,"display_unassigned","","",13,[[["self"]],["string"]]],[11,"new","","",13,[[],["info"]]],[0,"monitor","rbot_discord::features","Monitor our web services, and the swarm using the Traefik Health informations.",N,N],[5,"request","rbot_discord::features::monitor","Simple get request, returned as string",N,[[],["string"]]],[5,"get_codes","","Request the codes and parse them, returning a `Value`",N,[[],["value"]]],[5,"display_codes","","",N,[[["vec"]],["string"]]],[5,"error_code_check","","Main loop on a fixed time, get, parse and check for the error codes.",N,[[]]],[0,"notify","rbot_discord::features","",N,N],[3,"Event","rbot_discord::features::notify","",N,N],[12,"name","","",14,N],[12,"duration","","",14,N],[12,"started","","",14,N],[12,"message","","",14,N],[12,"channel","","",14,N],[12,"repeat","","",14,N],[5,"check_events","","",N,[[]]],[17,"_IMPL_SERIALIZE_FOR_Event","","",N,N],[17,"_IMPL_DESERIALIZE_FOR_Event","","",N,N],[8,"EventVec","","",N,N],[10,"remove_elem","","",15,[[["self"],["event"]]]],[11,"add","","",14,[[["vec"]],["string"]]],[0,"slackimport","rbot_discord::features","Import slack to discord, using exported files",N,N],[3,"Message","rbot_discord::features::slackimport","Minimal structure representation from a Slack json export file",N,N],[12,"type_","","",16,N],[12,"user","","",16,N],[12,"text","","",16,N],[12,"ts","","",16,N],[5,"visit_dirs","","Visit every entry in a directory",N,[[["path"],["fn"],["guildchannel"]],["result"]]],[5,"visit_files","","Read and parse the files, output the found messages, to the discord associated channel",N,[[["direntry"],["guildchannel"]]]],[5,"import","","Entry point for importing Slack to discord",N,[[["vec"]],["string"]]],[7,"GUILD","","Fixed guild to export slack files to",N,N],[17,"_IMPL_SERIALIZE_FOR_Message","","",N,N],[17,"_IMPL_DESERIALIZE_FOR_Message","","",N,N],[7,"CREDENTIALS_FILE","rbot_discord","",N,N],[7,"MAIL_INFO_FILE","","",N,N],[7,"MAIL_LOCK","","",N,N],[7,"NOTIFY_EVENT_FILE","","",N,N],[17,"_IMPL_SERIALIZE_FOR_Credentials","","",N,N],[17,"_IMPL_DESERIALIZE_FOR_Credentials","","",N,N],[11,"new","","",0,[[],["credentials"]]]],"paths":[[3,"Credentials"],[3,"CREDENTIALS_FILE"],[3,"MAIL_INFO_FILE"],[3,"MAIL_LOCK"],[3,"NOTIFY_EVENT_FILE"],[3,"Command"],[3,"ATTACKED"],[3,"TAG_MSG_LIST"],[3,"CONTAIN_MSG_LIST"],[3,"CONTAIN_REACTION_LIST"],[3,"COMMANDS_LIST"],[8,"IsEmpty"],[3,"FileReader"],[3,"Info"],[3,"Event"],[8,"EventVec"],[3,"Message"]]};
initSearch(searchIndex);
